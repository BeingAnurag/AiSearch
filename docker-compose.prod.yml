services:
  # Backend API Service
  backend:
    container_name: backend
    image: backend
    build:
      context: .
      dockerfile: infrastructure/docker/backend.Dockerfile
      target: production
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - SEARXNG_API_URL=http://searxng:8080
    depends_on:
      - searxng
    networks:
      - aisearch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: .
      dockerfile: infrastructure/docker/frontend.Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - aisearch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SearxNG Search Engine
  searxng:
    container_name: searxng
    image: searxng
    ports:
      - "8080:8080"
    volumes:
      - ./settings.yml:/etc/searxng/settings.yml:ro
    environment:
      - SEARXNG_BASE_URL=http://localhost:8080/
    networks:
      - aisearch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  aisearch-network:
    driver: bridge

volumes:
  searxng-data: